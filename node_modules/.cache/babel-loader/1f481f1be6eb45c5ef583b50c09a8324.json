{"ast":null,"code":"import React from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Progress(props){var winWidth=window.innerWidth;var progressQuery=function progressQuery(){if(winWidth&&winWidth>767){return/*#__PURE__*/_jsx(\"span\",{className:\"mi-progress-active\",style:props.isVisible?{width:\"\".concat(props.percentage,\"%\")}:{width:0}});}return/*#__PURE__*/_jsx(\"span\",{className:\"mi-progress-active\",style:{width:\"\".concat(props.percentage,\"%\")}});};return/*#__PURE__*/_jsxs(\"div\",{className:\"mi-progress\",children:[/*#__PURE__*/_jsx(\"h6\",{className:\"mi-progress-title\",children:props.title}),/*#__PURE__*/_jsxs(\"div\",{className:\"mi-progress-inner\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"mi-progress-percentage\",children:\"\".concat(props.percentage,\"%\")}),/*#__PURE__*/_jsx(\"div\",{className:\"mi-progress-container\",children:progressQuery()})]})]});}export default Progress;","map":{"version":3,"sources":["/Users/brandon/Documents/Projects/Website/react-gh-pages/src/components/Progress.js"],"names":["React","Progress","props","winWidth","window","innerWidth","progressQuery","isVisible","width","percentage","title"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,wFAEA,QAASC,CAAAA,QAAT,CAAkBC,KAAlB,CAAwB,CACtB,GAAMC,CAAAA,QAAQ,CAAGC,MAAM,CAACC,UAAxB,CACA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAK,CACzB,GAAGH,QAAQ,EAAIA,QAAQ,CAAG,GAA1B,CAA8B,CAC5B,mBAAO,aACL,SAAS,CAAC,oBADL,CAEL,KAAK,CAAED,KAAK,CAACK,SAAN,CAAkB,CAACC,KAAK,WAAKN,KAAK,CAACO,UAAX,KAAN,CAAlB,CAAoD,CAACD,KAAK,CAAE,CAAR,CAFtD,EAAP,CAID,CACD,mBAAO,aAAM,SAAS,CAAC,oBAAhB,CAAqC,KAAK,CAAE,CAACA,KAAK,WAAKN,KAAK,CAACO,UAAX,KAAN,CAA5C,EAAP,CACD,CARD,CASA,mBACE,aAAK,SAAS,CAAC,aAAf,wBACE,WAAI,SAAS,CAAC,mBAAd,UAAmCP,KAAK,CAACQ,KAAzC,EADF,cAEE,aAAK,SAAS,CAAC,mBAAf,wBACE,YAAK,SAAS,CAAC,wBAAf,oBAA4CR,KAAK,CAACO,UAAlD,OADF,cAEE,YAAK,SAAS,CAAC,uBAAf,UACGH,aAAa,EADhB,EAFF,GAFF,GADF,CAWD,CAED,cAAeL,CAAAA,QAAf","sourcesContent":["import React from \"react\";\n\nfunction Progress(props){\n  const winWidth = window.innerWidth;\n  const progressQuery = () =>{\n    if(winWidth && winWidth > 767){\n      return(<span\n        className=\"mi-progress-active\"\n        style={props.isVisible ? {width: `${props.percentage}%`} : {width: 0}}\n      ></span>)\n    }\n    return(<span className=\"mi-progress-active\" style={{width: `${props.percentage}%`}}></span>)\n  }\n  return (\n    <div className=\"mi-progress\">\n      <h6 className=\"mi-progress-title\">{props.title}</h6>\n      <div className=\"mi-progress-inner\">\n        <div className=\"mi-progress-percentage\">{`${props.percentage}%`}</div>\n        <div className=\"mi-progress-container\">\n          {progressQuery()}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Progress;\n"]},"metadata":{},"sourceType":"module"}